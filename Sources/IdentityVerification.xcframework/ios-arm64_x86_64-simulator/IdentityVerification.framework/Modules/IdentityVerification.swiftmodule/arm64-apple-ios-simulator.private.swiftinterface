// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name IdentityVerification
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Combine
import Foundation
@_exported import IdentityVerification
import Swift
import SwiftUI
import TSCoreSDK
import UIKit
import _Concurrency
import _StringProcessing
import zlib
extension TSCoreSDK.TSRequestError : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
public protocol TSIdentityVerificationDelegate : AnyObject {
  func verificationDidReceiveStatus(_ status: IdentityVerification.TSIdentityVerificationStatus)
  func verificationDidFail(with error: IdentityVerification.TSIdentityVerificationError)
}
public enum TSIdentityVerificationStatus {
  case pending
  case capturing
  case processing
  case recapture
  case completed
  public static func == (a: IdentityVerification.TSIdentityVerificationStatus, b: IdentityVerification.TSIdentityVerificationStatus) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum TSIdentityVerificationError : Swift.Error {
  case cameraPermissionRequired
  case sdkDisabled
  case sessionNotValid
  case verificationStatusError
  case genericServerError
  case networkError
  public static func == (a: IdentityVerification.TSIdentityVerificationError, b: IdentityVerification.TSIdentityVerificationError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class TSIdentityVerification : ObjectiveC.NSObject {
  weak public static var delegate: (any IdentityVerification.TSIdentityVerificationDelegate)? {
    get
    set
  }
  public static func initialize(baseUrl: Swift.String = "https://verifyid.security", clientId: Swift.String)
  public static func start(startToken: Swift.String)
  public static func recapture()
  @objc deinit
}
extension IdentityVerification.TSIdentityVerificationStatus : Swift.Equatable {}
extension IdentityVerification.TSIdentityVerificationStatus : Swift.Hashable {}
extension IdentityVerification.TSIdentityVerificationError : Swift.Equatable {}
extension IdentityVerification.TSIdentityVerificationError : Swift.Hashable {}
